# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: segmentation_synthseg
description: Perform Brain Tissues Segmentation using Freesurfer synthseg on a T1
  image. Optionally, a binary mask of lesion can be add to correct the white matter
  mask. Note that tests using synthseg are non-reproductible.
keywords:
  - Segmentation
  - Tissues
  - Synthetic
  - neural network
  - Artificial intelligence
  - machine learning
tools:
  - Freesurfer:
      description: |
        Open source neuroimaging toolkit for processing, analyzing, and visualizing human brain MR images.
      homepage: https://surfer.nmr.mgh.harvard.edu/
      identifier: 10.1016/j.neuroimage.2012.01.021
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. `[ id:'sample1', single_end:false ]`

    - image:
        type: file
        description: Nifti T1 volume to segment into tissue maps.
        pattern: "*.{nii,nii.gz}"

    - lesion:
        type: file
        description: Nifti lesion volume to correct the white matter with a lesion mask.
          The lesion mask must be a binary mask.
        pattern: "*.{nii,nii.gz}"

    - fs_license:
        type: file
        description:
          The path to your FreeSurfer license. To get one, go to https://surfer.nmr.mgh.harvard.edu/registration.html.
          Optional. If you have already set your license as prescribed by Freesurfer
          (copied to a .license file in your $FREESURFER_HOME), this is not required.
        pattern: "*.txt"

output:
  - wm_mask:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__mask_wm.nii.gz":
          type: file
          description: Nifti WM mask volume.
          pattern: "*__mask_wm.{nii,nii.gz}"
  - gm_mask:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__mask_gm.nii.gz":
          type: file
          description: Nifti GM mask volume.
          pattern: "*__mask_gm.{nii,nii.gz}"
  - csf_mask:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__mask_csf.nii.gz":
          type: file
          description: Nifti CSF mask volume.
          pattern: "*__mask_csf.{nii,nii.gz}"
  - wm_map:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__map_wm.nii.gz":
          type: file
          description: Nifti WM map volume.
          pattern: "*__map_wm.{nii,nii.gz}"
  - gm_map:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__map_gm.nii.gz":
          type: file
          description: Nifti GM map volume.
          pattern: "*__map_gm.{nii,nii.gz}"
  - csf_map:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__map_csf.nii.gz":
          type: file
          description: Nifti CSF map volume.
          pattern: "*__map_csf.{nii,nii.gz}"
  - seg:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__seg.nii.gz":
          type: file
          description: (optional) Nifti cortical segmentation volume.
          pattern: "*__seg.{nii,nii.gz}"
  - aparc_aseg:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__aparc_aseg.nii.gz":
          type: file
          description: (optional) Nifti cortical parcellation volume and segmentation.
          pattern: "*__aparc_aseg.{nii,nii.gz}"
  - resample:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__resampled_image.nii.gz":
          type: file
          description: |
            (optional) in order to return segmentations at 1mm resolution, the input
            images are internally resampled (except if they already are at 1mm). Use
            this optional flag to save the resampled images. This must be the same type as â€”i.
          pattern: "*__resampled_image.{nii,nii.gz}"
  - volume:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__volume.csv":
          type: file
          description: (optional) Output CSV file with volumes for all structures and subjects.
          pattern: "*__volume.csv"
  - qc_score:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*__qc_score.csv":
          type: file
          description: (optional) Output CSV file with qc scores for all subjects.
          pattern: "*__qc_score.csv"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: versions.yml
authors:
  - "@anroy1"
maintainers:
  - "@anroy1"
